:root {
    --astro-gradient: linear-gradient(0deg, #4F39FA, #DA62C4)
}

html {
    font-family:Inter, sans-serif
}

#make.astro-52IIBXVS line.astro-52IIBXVS breaks.astro-52IIBXVS in.astro-52IIBXVS code.astro-52IIBXVS blocks.astro-52IIBXVS pre.astro-52IIBXVS {
    white-space:pre-wrap
}

main.astro-52IIBXVS {
    overflow:hidden
}

.glasss.svelte-1xoylbq {
    -webkit-backdrop-filter: saturate(180%) blur(10px);
    backdrop-filter: saturate(180%) blur(10px);
    box-shadow:#0201011a 0 5px 20px -5px
}

.img-bg.svelte-re5eho {
    position: relative;
    z-index: 10;
    width:calc(100% - 20px)
}

.img-bg.svelte-re5eho:after {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    border-radius: .5rem;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    background-position: left top;
    --tw-content: "";
    content: var(--tw-content);
    background-size: 10px 10px;
    transform: translate(20px, 20px);
    z-index:-1
}

.glasss.svelte-1dr98tu {
    -webkit-backdrop-filter: saturate(180%) blur(10px);
    backdrop-filter: saturate(180%) blur(10px);
    box-shadow: #0201011a 0 5px 20px -5px;
    background-color:transparent !important
}

*, :before, :after {
    box-sizing: border-box;
    border-width: 0;
    border-style: solid;
    border-color:#e5e7eb
}

:before, :after {
    --tw-content: ""
}

html {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", Segoe UI Symbol, "Noto Color Emoji"
}

body {
    margin: 0;
    line-height:inherit
}

hr {
    height: 0;
    color: inherit;
    border-top-width:1px
}

abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration:underline dotted
}

h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight:inherit
}

a {
    color: inherit;
    text-decoration:inherit
}

b, strong {
    font-weight:bolder
}

code, kbd, samp, pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
    font-size:1em
}

small {
    font-size:80%
}

sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align:baseline
}

sub {
    bottom:-.25em
}

sup {
    top:-.5em
}

table {
    text-indent: 0;
    border-color: inherit;
    border-collapse:collapse
}

button, input, optgroup, select, textarea {
    font-family: inherit;
    font-size: 100%;
    font-weight: inherit;
    line-height: inherit;
    color: inherit;
    margin: 0;
    padding:0
}

button, select {
    text-transform:none
}

button, [type=button], [type=reset], [type=submit] {
    -webkit-appearance: button;
    background-color: transparent;
    background-image:none
}

:-moz-focusring {
    outline:auto
}

:-moz-ui-invalid {
    box-shadow:none
}

progress {
    vertical-align:baseline
}

::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height:auto
}

[type=search] {
    -webkit-appearance: textfield;
    outline-offset:-2px
}

::-webkit-search-decoration {
    -webkit-appearance:none
}

::-webkit-file-upload-button {
    -webkit-appearance: button;
    font:inherit
}

summary {
    display:list-item
}

blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre {
    margin:0
}

fieldset {
    margin: 0;
    padding:0
}

legend {
    padding:0
}

ol, ul, menu {
    list-style: none;
    margin: 0;
    padding:0
}

textarea {
    resize:vertical
}

input::-moz-placeholder, textarea::-moz-placeholder {
    opacity: 1;
    color:#9ca3af
}

input::placeholder, textarea::placeholder {
    opacity: 1;
    color:#9ca3af
}

button, [role=button] {
    cursor:pointer
}

:disabled {
    cursor:default
}

img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align:middle
}

img, video {
    max-width: 100%;
    height:auto
}

:root, [data-theme] {
    background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1));
    color:hsla(var(--bc) / var(--tw-text-opacity, 1))
}

html {
    -webkit-tap-highlight-color:transparent
}

:root {
    --p: 192 91% 36%;
    --pf: 192 91% 29%;
    --sf: 0 2% 8%;
    --af: 0 0% 12%;
    --nf: 0 0% 0%;
    --btn-text-case: uppercase;
    --border-btn: 1px;
    --tab-border: 1px;
    --pc: 0 0% 100%;
    --s: 0 2% 10%;
    --sc: 0 0% 100%;
    --a: 0 0% 15%;
    --ac: 0 0% 100%;
    --n: 0 0% 0%;
    --nc: 0 0% 100%;
    --b1: 0 0% 100%;
    --b2: 0 0% 95%;
    --b3: 0 2% 90%;
    --bc: 0 0% 0%;
    --in: 212 100% 48%;
    --inc: 0 0% 100%;
    --su: 137 72% 46%;
    --suc: 0 0% 100%;
    --wa: 5 100% 66%;
    --wac: 0 0% 100%;
    --er: 325 78% 49%;
    --erc: 0 0% 100%;
    --rounded-box: .25rem;
    --rounded-btn: .25rem;
    --rounded-badge: .125rem;
    --animation-btn: 0;
    --animation-input: 0;
    --btn-focus-scale: 1;
    --tab-radius: 0
}

[data-theme=lofi] {
    --p: 192 91% 36%;
    --pf: 192 91% 29%;
    --sf: 0 2% 8%;
    --af: 0 0% 12%;
    --nf: 0 0% 0%;
    --btn-text-case: uppercase;
    --border-btn: 1px;
    --tab-border: 1px;
    --pc: 0 0% 100%;
    --s: 0 2% 10%;
    --sc: 0 0% 100%;
    --a: 0 0% 15%;
    --ac: 0 0% 100%;
    --n: 0 0% 0%;
    --nc: 0 0% 100%;
    --b1: 0 0% 100%;
    --b2: 0 0% 95%;
    --b3: 0 2% 90%;
    --bc: 0 0% 0%;
    --in: 212 100% 48%;
    --inc: 0 0% 100%;
    --su: 137 72% 46%;
    --suc: 0 0% 100%;
    --wa: 5 100% 66%;
    --wac: 0 0% 100%;
    --er: 325 78% 49%;
    --erc: 0 0% 100%;
    --rounded-box: .25rem;
    --rounded-btn: .25rem;
    --rounded-badge: .125rem;
    --animation-btn: 0;
    --animation-input: 0;
    --btn-focus-scale: 1;
    --tab-radius: 0
}

[data-theme=darkModeee] {
    --p: 188 86% 53%;
    --pf: 188 86% 43%;
    --sf: 0 2% 16%;
    --af: 0 2% 16%;
    --bc: 0 0% 80%;
    --pc: 188 100% 11%;
    --sc: 0 5% 84%;
    --ac: 0 5% 84%;
    --nc: 0 3% 83%;
    --inc: 240 100% 90%;
    --suc: 120 100% 85%;
    --wac: 60 100% 10%;
    --erc: 0 100% 90%;
    --btn-text-case: uppercase;
    --border-btn: 1px;
    --tab-border: 1px;
    --s: 0 2% 20%;
    --a: 0 2% 20%;
    --b1: 0 0% 0%;
    --b2: 0 0% 5%;
    --b3: 0 2% 10%;
    --n: 0 1% 15%;
    --nf: 0 2% 20%;
    --in: 240 100% 50%;
    --su: 120 100% 25%;
    --wa: 60 100% 50%;
    --er: 0 100% 50%;
    --rounded-box: .25rem;
    --rounded-btn: .25rem;
    --rounded-badge: .125rem;
    --animation-btn: 0;
    --animation-input: 0;
    --btn-focus-scale: 1;
    --tab-radius: 0
}

*, :before, :after {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x:;
    --tw-pan-y:;
    --tw-pinch-zoom:;
    --tw-scroll-snap-strictness: proximity;
    --tw-ordinal:;
    --tw-slashed-zero:;
    --tw-numeric-figure:;
    --tw-numeric-spacing:;
    --tw-numeric-fraction:;
    --tw-ring-inset:;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: #da62c4;-
    shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur:;
    --tw-brightness:;
    --tw-contrast:;
    --tw-grayscale:;
    --tw-hue-rotate:;
    --tw-invert:;
    --tw-saturate:;
    --tw-sepia:;
    --tw-drop-shadow:;
    --tw-backdrop-blur:;
    --tw-backdrop-brightness:;
    --tw-backdrop-contrast:;
    --tw-backdrop-grayscale:;
    --tw-backdrop-hue-rotate:;
    --tw-backdrop-invert:;
    --tw-backdrop-opacity:;
    --tw-backdrop-saturate:;
    --tw-backdrop-sepia:
}

::-webkit-backdrop {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x:;
    --tw-pan-y:;
    --tw-pinch-zoom:;
    --tw-scroll-snap-strictness: proximity;
    --tw-ordinal:;
    --tw-slashed-zero:;
    --tw-numeric-figure:;
    --tw-numeric-spacing:;
    --tw-numeric-fraction:;
    --tw-ring-inset:;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / .5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur:;
    --tw-brightness:;
    --tw-contrast:;
    --tw-grayscale:;
    --tw-hue-rotate:;
    --tw-invert:;
    --tw-saturate:;
    --tw-sepia:;
    --tw-drop-shadow:;
    --tw-backdrop-blur:;
    --tw-backdrop-brightness:;
    --tw-backdrop-contrast:;
    --tw-backdrop-grayscale:;
    --tw-backdrop-hue-rotate:;
    --tw-backdrop-invert:;
    --tw-backdrop-opacity:;
    --tw-backdrop-saturate:;
    --tw-backdrop-sepia:
}

::backdrop {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x:;
    --tw-pan-y:;
    --tw-pinch-zoom:;
    --tw-scroll-snap-strictness: proximity;
    --tw-ordinal:;
    --tw-slashed-zero:;
    --tw-numeric-figure:;
    --tw-numeric-spacing:;
    --tw-numeric-fraction:;
    --tw-ring-inset:;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: #da62c4;
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur:;
    --tw-brightness:;
    --tw-contrast:;
    --tw-grayscale:;
    --tw-hue-rotate:;
    --tw-invert:;
    --tw-saturate:;
    --tw-sepia:;
    --tw-drop-shadow:;
    --tw-backdrop-blur:;
    --tw-backdrop-brightness:;
    --tw-backdrop-contrast:;
    --tw-backdrop-grayscale:;
    --tw-backdrop-hue-rotate:;
    --tw-backdrop-invert:;
    --tw-backdrop-opacity:;
    --tw-backdrop-saturate:;
    --tw-backdrop-sepia:
}

.prose {
    color: var(--tw-prose-body);
    max-width: 65ch
}

.prose :where([class ~ ="lead"]):not(:where([class ~ ="not-prose"] *)) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em
}

.prose :where(a):not(:where([class ~ ="not-prose"] *)) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500
}

.prose :where(strong):not(:where([class ~ ="not-prose"] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600
}

.prose :where(ol):not(:where([class ~ ="not-prose"] *)) {
    list-style-type: decimal;
    padding-left: 1.625em
}

.prose :where(ol[type="A"]):not(:where([class ~ ="not-prose"] *)) {
    list-style-type: upper-alpha
}

.prose :where(ol[type="a"]):not(:where([class ~ ="not-prose"] *)) {
    list-style-type: lower-alpha
}

.prose :where(ol[type="A" s]):not(:where([class ~ ="not-prose"] *)) {
    list-style-type: upper-alpha
}

.prose :where(ol[type="a" s]):not(:where([class ~ ="not-prose"] *)) {
    list-style-type: lower-alpha
}

.prose :where(ol[type="I"]):not(:where([class ~ ="not-prose"] *)) {
    list-style-type: upper-roman
}

.prose :where(ol[type="i"]):not(:where([class ~ ="not-prose"] *)) {
    list-style-type: lower-roman
}

.prose :where(ol[type="I" s]):not(:where([class ~ ="not-prose"] *)) {
    list-style-type: upper-roman
}

.prose :where(ol[type="i" s]):not(:where([class ~ ="not-prose"] *)) {
    list-style-type: lower-roman
}

.prose :where(ol[type="1"]):not(:where([class ~ ="not-prose"] *)) {
    list-style-type: decimal
}

.prose :where(ul):not(:where([class ~ ="not-prose"] *)) {
    list-style-type: disc;
    padding-left: 1.625em
}

.prose :where(ol > li):not(:where([class ~ ="not-prose"] *))::marker {
    font-weight: 400;
    color: var(--tw-prose-counters)
}

.prose :where(ul > li):not(:where([class ~ ="not-prose"] *))::marker {
    color: var(--tw-prose-bullets)
}

.prose :where(hr):not(:where([class ~ ="not-prose"] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em
}

.prose :where(blockquote):not(:where([class ~ ="not-prose"] *)) {
    font-weight: 500;
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-left-width: .25rem;
    border-left-color: var(--tw-prose-quote-borders);
    quotes: "\201c""\201d""\2018""\2019";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1em
}

.prose :where(blockquote p:first-of-type):not(:where([class ~ ="not-prose"] *)):before {
    content: open-quote
}

.prose :where(blockquote p:last-of-type):not(:where([class ~ ="not-prose"] *)):after {
    content: close-quote
}

.prose :where(h1):not(:where([class ~ ="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: .8888889em;
    line-height: 1.1111111
}

.prose :where(h1 strong):not(:where([class ~ ="not-prose"] *)) {
    font-weight: 900
}

.prose :where(h2):not(:where([class ~ ="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333
}

.prose :where(h2 strong):not(:where([class ~ ="not-prose"] *)) {
    font-weight: 800
}

.prose :where(h3):not(:where([class ~ ="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: .6em;
    line-height: 1.6
}

.prose :where(h3 strong):not(:where([class ~ ="not-prose"] *)) {
    font-weight: 700
}

.prose :where(h4):not(:where([class ~ ="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: .5em;
    line-height: 1.5
}

.prose :where(h4 strong):not(:where([class ~ ="not-prose"] *)) {
    font-weight: 700
}

.prose :where(figure > *):not(:where([class ~ ="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0
}

.prose :where(figcaption):not(:where([class ~ ="not-prose"] *)) {
    color: var(--tw-prose-captions);
    font-size: .875em;
    line-height: 1.4285714;
    margin-top: .8571429em
}

.prose :where(code):not(:where([class ~ ="not-prose"] *)) {
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: .875em
}

.prose :where(code):not(:where([class ~ ="not-prose"] *)):before {
    content: "`"
}

.prose :where(code):not(:where([class ~ ="not-prose"] *)):after {
    content: "`"
}

.prose :where(a code):not(:where([class ~ ="not-prose"] *)) {
    color: var(--tw-prose-links)
}

.prose :where(pre):not(:where([class ~ ="not-prose"] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: .875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: .375rem;
    padding: .8571429em 1.1428571em
}

.prose :where(pre code):not(:where([class ~ ="not-prose"] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit
}

.prose :where(pre code):not(:where([class ~ ="not-prose"] *)):before {
    content: none
}

.prose :where(pre code):not(:where([class ~ ="not-prose"] *)):after {
    content: none
}

.prose :where(table):not(:where([class ~ ="not-prose"] *)) {
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: .875em;
    line-height: 1.7142857
}

.prose :where(thead):not(:where([class ~ ="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders)
}

.prose :where(thead th):not(:where([class ~ ="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-right: .5714286em;
    padding-bottom: .5714286em;
    padding-left: .5714286em
}

.prose :where(tbody tr):not(:where([class ~ ="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders)
}

.prose :where(tbody tr:last-child):not(:where([class ~ ="not-prose"] *)) {
    border-bottom-width: 0
}

.prose :where(tbody td):not(:where([class ~ ="not-prose"] *)) {
    vertical-align: baseline;
    padding:.5714286em
}

.prose {
    --tw-prose-body: #374151;
    --tw-prose-headings: #111827;
    --tw-prose-lead: #4b5563;
    --tw-prose-links: #111827;
    --tw-prose-bold: #111827;
    --tw-prose-counters: #6b7280;
    --tw-prose-bullets: #d1d5db;
    --tw-prose-hr: #e5e7eb;
    --tw-prose-quotes: #111827;
    --tw-prose-quote-borders: #e5e7eb;
    --tw-prose-captions: #6b7280;
    --tw-prose-code: #111827;
    --tw-prose-pre-code: #e5e7eb;
    --tw-prose-pre-bg: #1f2937;
    --tw-prose-th-borders: #d1d5db;
    --tw-prose-td-borders: #e5e7eb;
    --tw-prose-invert-body: #d1d5db;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #9ca3af;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #9ca3af;
    --tw-prose-invert-bullets: #4b5563;
    --tw-prose-invert-hr: #374151;
    --tw-prose-invert-quotes: #f3f4f6;
    --tw-prose-invert-quote-borders: #374151;
    --tw-prose-invert-captions: #9ca3af;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #d1d5db;
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: #4b5563;
    --tw-prose-invert-td-borders: #374151;
    font-size: 1rem;
    line-height: 1.75
}

.prose :where(p):not(:where([class ~ ="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em
}

.prose :where(img):not(:where([class ~ ="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(video):not(:where([class ~ ="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(figure):not(:where([class ~ ="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(h2 code):not(:where([class ~ ="not-prose"] *)) {
    font-size: .875em
}

.prose :where(h3 code):not(:where([class ~ ="not-prose"] *)) {
    font-size: .9em
}

.prose :where(li):not(:where([class ~ ="not-prose"] *)) {
    margin-top: .5em;
    margin-bottom: .5em
}

.prose :where(ol > li):not(:where([class ~ ="not-prose"] *)) {
    padding-left: .375em
}

.prose :where(ul > li):not(:where([class ~ ="not-prose"] *)) {
    padding-left: .375em
}

.prose > :where(ul > li p):not(:where([class ~ ="not-prose"] *)) {
    margin-top: .75em;
    margin-bottom: .75em
}

.prose > :where(ul > li > * :first-child):not(:where([class ~ ="not-prose"] *)) {
    margin-top: 1.25em
}

.prose > :where(ul > li > * :last-child):not(:where([class ~ ="not-prose"] *)) {
    margin-bottom: 1.25em
}

.prose > :where(ol > li > * :first-child):not(:where([class ~ ="not-prose"] *)) {
    margin-top: 1.25em
}

.prose > :where(ol > li > * :last-child):not(:where([class ~ ="not-prose"] *)) {
    margin-bottom: 1.25em
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class ~ ="not-prose"] *)) {
    margin-top: .75em;
    margin-bottom: .75em
}

.prose :where(hr + *):not(:where([class ~ ="not-prose"] *)) {
    margin-top: 0
}

.prose :where(h2 + *):not(:where([class ~ ="not-prose"] *)) {
    margin-top: 0
}

.prose :where(h3 + *):not(:where([class ~ ="not-prose"] *)) {
    margin-top: 0
}

.prose :where(h4 + *):not(:where([class ~ ="not-prose"] *)) {
    margin-top: 0
}

.prose :where(thead th:first-child):not(:where([class ~ ="not-prose"] *)) {
    padding-left: 0
}

.prose :where(thead th:last-child):not(:where([class ~ ="not-prose"] *)) {
    padding-right: 0
}

.prose :where(tbody td:first-child):not(:where([class ~ ="not-prose"] *)) {
    padding-left: 0
}

.prose :where(tbody td:last-child):not(:where([class ~ ="not-prose"] *)) {
    padding-right: 0
}

.prose > :where(:first-child):not(:where([class ~ ="not-prose"] *)) {
    margin-top: 0
}

.prose > :where(:last-child):not(:where([class ~ ="not-prose"] *)) {
    margin-bottom:0
}

.badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    height: 1.25rem;
    font-size: .875rem;
    line-height: 1.25rem;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
    padding-left: .563rem;
    padding-right: .563rem;
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--n) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
    border-radius:var(--rounded-badge, 1.9rem)
}

.btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border-color: transparent;
    border-color: hsl(var(--n) / var(--tw-border-opacity));
    text-align: center;
    transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    border-radius: var(--rounded-btn, .5rem);
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: .875rem;
    line-height: 1.25rem;
    line-height: 1em;
    min-height: 3rem;
    font-weight: 600;
    text-transform: uppercase;
    text-transform: var(--btn-text-case, uppercase);
    -webkit-text-decoration-line: none;
    text-decoration-line: none;
    border-width: var(--border-btn, 1px);
    -webkit-animation: button-pop var(--animation-btn, .25s) ease-out;
    animation: button-pop var(--animation-btn, .25s) ease-out;
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--nc) / var(--tw-text-opacity))
}

.btn-disabled, .btn[disabled] {
    pointer-events:none
}

.btn-square {
    height: 3rem;
    width: 3rem;
    padding:0
}

.btn.loading, .btn.loading:hover {
    pointer-events:none
}

.btn.loading:before {
    margin-right: .5rem;
    height: 1rem;
    width: 1rem;
    border-radius: 9999px;
    border-width: 2px;
    -webkit-animation: spin 2s linear infinite;
    animation: spin 2s linear infinite;
    content: "";
    border-top-color: transparent;
    border-left-color: transparent;
    border-bottom-color: currentColor;
    border-right-color:currentColor
}

@media (prefers-reduced-motion: reduce) {
    .btn.loading:before {
        -webkit-animation: spin 10s linear infinite;
        animation:spin 10s linear infinite
    }
}

@-webkit-keyframes spin {
    0% {
        transform:rotate(0)
    }

    to {
        transform:rotate(360deg)
    }
}

@keyframes spin {
    0% {
        transform:rotate(0)
    }

    to {
        transform:rotate(360deg)
    }
}

.btn-group > input[type=radio].btn {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance:none
}

.btn-group > input[type=radio].btn:before {
    content:attr(data-title)
}

.card {
    position: relative;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    border-radius:var(--rounded-box, 1rem)
}

.card:focus {
    outline: 2px solid transparent;
    outline-offset:2px
}

.card-body {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    padding: var(--padding-card, 2rem);
    gap:.5rem
}

.card-body :where(p) {
    flex-grow:1
}

.card-actions {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    gap:.5rem
}

.card figure {
    display: flex;
    align-items: center;
    justify-content:center
}

.card.image-full {
    display:grid
}

.card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    opacity: .75;
    border-radius:var(--rounded-box, 1rem)
}

.card.image-full:before, .card.image-full > * {
    grid-column-start: 1;
    grid-row-start:1
}

.card.image-full > figure img {
    height: 100%;
    -o-object-fit: cover;
    object-fit:cover
}

.card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color:hsl(var(--nc) / var(--tw-text-opacity))
}

.dropdown {
    position: relative;
    display:inline-block
}

.dropdown > * :focus {
    outline: 2px solid transparent;
    outline-offset:2px
}

.dropdown .dropdown-content {
    visibility: hidden;
    position: absolute;
    z-index: 50;
    opacity: 0;
    transform-origin: top;
    --tw-scale-x: .95;
    --tw-scale-y: .95;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-duration: .2s;
    transition-timing-function:cubic-bezier(.4, 0, .2, 1)
}

.dropdown-end .dropdown-content {
    right:0
}

.dropdown-left .dropdown-content {
    top: 0;
    right: 100%;
    bottom: auto;
    transform-origin:right
}

.dropdown-right .dropdown-content {
    left: 100%;
    top: 0;
    bottom: auto;
    transform-origin:left
}

.dropdown-top .dropdown-content {
    bottom: 100%;
    top: auto;
    transform-origin:bottom
}

.dropdown-end.dropdown-right .dropdown-content, .dropdown-end.dropdown-left .dropdown-content {
    bottom: 0;
    top:auto
}

.dropdown.dropdown-open .dropdown-content, .dropdown.dropdown-hover:hover .dropdown-content, .dropdown:not(.dropdown-hover):focus .dropdown-content, .dropdown:not(.dropdown-hover):focus-within .dropdown-content {
    visibility: visible;
    opacity:1
}

.footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    row-gap: 2.5rem;
    -moz-column-gap: 1rem;
    column-gap: 1rem;
    font-size: .875rem;
    line-height:1.25rem
}

.footer > * {
    display: grid;
    place-items: start;
    gap:.5rem
}

@media (min-width: 48rem) {
    .footer {
        grid-auto-flow:column
    }

    .footer-center {
        grid-auto-flow:row dense
    }
}

.label {
    display: flex;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    align-items: center;
    justify-content: space-between;
    padding:.5rem .25rem
}

.hero {
    display: grid;
    width: 100%;
    place-items: center;
    background-size: cover;
    background-position:center
}

.hero > * {
    grid-column-start: 1;
    grid-row-start:1
}

.hero-content {
    z-index: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    max-width: 80rem;
    gap: 1rem;
    padding:1rem
}

.link {
    cursor: pointer;
    -webkit-text-decoration-line: underline;
    text-decoration-line:underline
}

.menu {
    display: flex;
    flex-direction:column
}

.menu.horizontal {
    display: inline-flex;
    flex-direction:row
}

.menu.horizontal :where(li) {
    flex-direction:row
}

.menu :where(li) {
    position: relative;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    align-items:stretch
}

.menu :where(li:not(.menu-title)) > :where( * :not(ul)) {
    display:flex
}

.menu :where(li:not(.disabled):not(.menu-title)) > :where( * :not(ul)) {
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    align-items: center;
    outline: 2px solid transparent;
    outline-offset:2px
}

.menu > :where(li > * :not(ul):focus) {
    outline: 2px solid transparent;
    outline-offset:2px
}

.menu > :where(li.disabled > * :not(ul):focus) {
    cursor:auto
}

.menu > :where(li) :where(ul) {
    display: flex;
    flex-direction: column;
    align-items:stretch
}

.menu > :where(li) > :where(ul) {
    position: absolute;
    display: none;
    top: initial;
    left: 100%;
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius:inherit
}

.menu > :where(li:hover) > :where(ul) {
    display:flex
}

.menu > :where(li:focus) > :where(ul) {
    display:flex
}

.navbar {
    display: flex;
    align-items: center;
    padding: var(--navbar-padding, .5rem);
    min-height: 4rem;
    width:100%
}

:where(.navbar > *) {
    display: inline-flex;
    align-items:center
}

.navbar-start {
    width: 50%;
    justify-content:flex-start
}

.navbar-center {
    flex-shrink:0
}

.navbar-end {
    width: 50%;
    justify-content:flex-end
}

.stack {
    display: inline-grid;
    place-items: center;
    align-items:flex-end
}

.stack > * {
    grid-column-start: 1;
    grid-row-start: 1;
    transform: translateY(1rem) scale(.9);
    z-index: 1;
    width: 100%;
    opacity:.6
}

.stack > * :nth-child(2) {
    transform: translateY(.5rem) scale(.95);
    z-index: 2;
    opacity:.8
}

.stack > * :nth-child(1) {
    transform: translateY(0) scale(1);
    z-index: 3;
    opacity:1
}

.btn-outline .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--nc) / var(--tw-text-opacity))
}

.btn-outline.btn-primary .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--pc) / var(--tw-text-opacity))
}

.btn-outline.btn-secondary .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--s) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--s) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--sc) / var(--tw-text-opacity))
}

.btn-outline.btn-accent .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--a) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--a) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--ac) / var(--tw-text-opacity))
}

.btn-outline .badge.outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
    background-color:transparent
}

.btn-outline.btn-primary .badge-outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    background-color: transparent;
    --tw-text-opacity: 1;
    color:hsl(var(--p) / var(--tw-text-opacity))
}

.btn-outline:hover .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--bc) / var(--tw-text-opacity))
}

.btn-outline:hover .badge.outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--nc) / var(--tw-text-opacity))
}

.btn-outline.btn-primary:hover .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--pc) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--pc) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--p) / var(--tw-text-opacity))
}

.btn-outline.btn-primary:hover .badge.outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--pc) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--pc) / var(--tw-text-opacity))
}

.btn-outline.btn-secondary:hover .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--sc) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--sc) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--s) / var(--tw-text-opacity))
}

.btn-outline.btn-secondary:hover .badge.outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--sc) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--sc) / var(--tw-text-opacity))
}

.btn-outline.btn-accent:hover .badge {
    --tw-border-opacity: 1;
    border-color: hsl(var(--ac) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--ac) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--a) / var(--tw-text-opacity))
}

.btn-outline.btn-accent:hover .badge.outline {
    --tw-border-opacity: 1;
    border-color: hsl(var(--ac) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--ac) / var(--tw-text-opacity))
}

.btn:active:hover, .btn:active:focus {
    -webkit-animation: none;
    animation: none;
    transform:scale(var(--btn-focus-scale, .95))
}

.btn:hover, .btn-active {
    --tw-border-opacity: 1;
    border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color:hsl(var(--nf, var(--n)) / var(--tw-bg-opacity))
}

.btn:focus-visible {
    outline: 2px solid hsl(var(--nf));
    outline-offset:2px
}

.btn-primary {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--pc) / var(--tw-text-opacity));
}

.btn-primary:hover, .btn-primary.btn-active {
    --tw-border-opacity: 1;
    border-color: hsl(var(--pf, var(--p)) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color:hsl(var(--pf, var(--p)) / var(--tw-bg-opacity))
}

.btn-primary:focus-visible {
    outline:2px solid hsl(var(--p))
}

.btn.glass:hover, .btn.glass.btn-active {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%
}

.btn.glass:focus-visible {
    outline:2px solid 0 0 2px currentColor
}

.btn-ghost {
    border-width: 1px;
    border-color: transparent;
    background-color: transparent;
    color:currentColor
}

.btn-ghost:hover, .btn-ghost.btn-active {
    --tw-border-opacity: 0;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: .2
}

.btn-ghost:focus-visible {
    outline:2px solid 0 0 2px currentColor
}

.btn-outline.btn-primary {
    --tw-text-opacity: 1;
    color:hsl(var(--p) / var(--tw-text-opacity))
}

.btn-outline.btn-primary:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--pf, var(--p)) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--pc) / var(--tw-text-opacity))
}

.btn-disabled, .btn-disabled:hover, .btn[disabled], .btn[disabled]:hover {
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: .2;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: .2
}

.btn.loading.btn-square:before, .btn.loading.btn-circle:before {
    margin-right:0
}

.btn.loading.btn-xl:before, .btn.loading.btn-lg:before {
    height: 1.25rem;
    width:1.25rem
}

.btn.loading.btn-sm:before, .btn.loading.btn-xs:before {
    height: .75rem;
    width:.75rem
}

.btn-group > input[type=radio]:checked.btn, .btn-group > .btn-active {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--pc) / var(--tw-text-opacity))
}

.btn-group > input[type=radio]:checked.btn:focus-visible, .btn-group > .btn-active:focus-visible {
    outline:2px solid hsl(var(--p))
}

.btn-group:not(.btn-group-vertical) > .btn:not(:first-of-type) {
    margin-left: -1px;
    border-top-left-radius: 0;
    border-bottom-left-radius:0
}

.btn-group:not(.btn-group-vertical) > .btn:not(:last-of-type) {
    border-top-right-radius: 0;
    border-bottom-right-radius:0
}

.btn-group-vertical > .btn:not(:first-of-type) {
    margin-top: -1px;
    border-top-left-radius: 0;
    border-top-right-radius:0
}

.btn-group-vertical > .btn:not(:last-of-type) {
    border-bottom-right-radius: 0;
    border-bottom-left-radius:0
}

@-webkit-keyframes button-pop {
    0% {
        transform:scale(var(--btn-focus-scale, .95))
    }

    40% {
        transform:scale(1.02)
    }

    to {
        transform:scale(1)
    }
}

@keyframes button-pop {
    0% {
        transform:scale(var(--btn-focus-scale, .95))
    }

    40% {
        transform:scale(1.02)
    }

    to {
        transform:scale(1)
    }
}

.card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset:2px
}

.card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color:hsl(var(--b2, var(--b1)) / var(--tw-border-opacity))
}

.card.compact .card-body {
    padding: 1rem;
    font-size: .875rem;
    line-height:1.25rem
}

.card-title {
    display: flex;
    align-items: center;
    gap: .5rem;
    font-size: 1.25rem;
    line-height: 1.75rem;
    font-weight:600
}

@-webkit-keyframes checkmark {
    0% {
        background-position-y:5px
    }

    50% {
        background-position-y:-2px
    }

    to {
        background-position-y:0
    }
}

@keyframes checkmark {
    0% {
        background-position-y:5px
    }

    50% {
        background-position-y:-2px
    }

    to {
        background-position-y:0
    }
}

.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-primary {
    outline:2px solid hsl(var(--p))
}

.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.glass {
    outline:2px solid currentColor
}

.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-ghost {
    outline:2px solid currentColor
}

.dropdown.dropdown-open .dropdown-content, .dropdown.dropdown-hover:hover .dropdown-content, .dropdown:focus .dropdown-content, .dropdown:focus-within .dropdown-content {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.label a:hover {
    --tw-text-opacity: 1;
    color:hsl(var(--bc) / var(--tw-text-opacity))
}

.link:focus {
    outline: 2px solid transparent;
    outline-offset:2px
}

.link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset:2px
}

.menu.horizontal li.bordered > a, .menu.horizontal li.bordered > button, .menu.horizontal li.bordered > span {
    border-left-width: 0px;
    border-bottom-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity))
}

.menu[class * =" p-"] li > *, .menu[class^=p-] li > * {
    border-radius:var(--rounded-btn, .5rem)
}

.menu :where(li.bordered > *) {
    border-left-width: 4px;
    --tw-border-opacity: 1;
    border-color:hsl(var(--p) / var(--tw-border-opacity))
}

.menu :where(li) > :where( * :not(ul)) {
    gap: 0.75rem;
    padding: 1rem 1rem;
    color:currentColor
}

.menu :where(li:not(.menu-title):not(:empty)) > :where( * :not(ul):focus), .menu :where(li:not(.menu-title):not(:empty)) > :where( * :not(ul):hover) {
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: .1
}

.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active), .menu :where(li:not(.menu-title):not(:empty)) > :where( * :not(ul):active) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color:hsl(var(--pc) / var(--tw-text-opacity))
}

.menu :where(li:empty) {
    margin: .5rem 1rem;
    height: 1px;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: .1
}

.menu li.disabled > * {
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: .2
}

.menu li.disabled > * :hover {
    background-color:transparent
}

.menu li.hover-bordered a {
    border-left-width: 4px;
    border-color:transparent
}

.menu li.hover-bordered a:hover {
    --tw-border-opacity: 1;
    border-color:hsl(var(--p) / var(--tw-border-opacity))
}

.menu.compact li > a, .menu.compact li > span {
    padding-top: .5rem;
    padding-bottom: .5rem;
    font-size: .875rem;
    line-height:1.25rem
}

.menu .menu-title > * {
    padding-top: .25rem;
    padding-bottom: .25rem;
    font-size: .75rem;
    line-height: 1rem;
    font-weight: 700;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: .4
}

.menu :where(li:not(.disabled)) > :where( * :not(ul)) {
    outline: 2px solid transparent;
    outline-offset: 2px;
    transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-duration: .2s;
    transition-timing-function:cubic-bezier(.4, 0, .2, 1)
}

.menu > :where(li:first-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius:unset
}

.menu > :where(li:first-child) > :where(:not(ul)) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius:unset
}

.menu > :where(li:last-child) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius:inherit
}

.menu > :where(li:last-child) > :where(:not(ul)) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius:inherit
}

.menu > :where(li) > :where(ul) :where(li) {
    width: 100%;
    white-space:nowrap
}

.menu > :where(li) > :where(ul) :where(li) :where(ul) {
    padding-left:1rem
}

.menu > :where(li) > :where(ul) :where(li) > :where(:not(ul)) {
    width: 100%;
    white-space:nowrap
}

.menu > :where(li) > :where(ul) > :where(li:first-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius:unset
}

.menu > :where(li) > :where(ul) > :where(li:first-child) > :where(:not(ul)) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius:unset
}

.menu > :where(li) > :where(ul) > :where(li:last-child) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius:inherit
}

.menu > :where(li) > :where(ul) > :where(li:last-child) > :where(:not(ul)) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius:inherit
}

.mockup-phone .display {
    overflow: hidden;
    border-radius: 40px;
    margin-top:-25px
}

@-webkit-keyframes progress-loading {
    50% {
        left:107%
    }
}

@keyframes progress-loading {
    50% {
        left:107%
    }
}

@-webkit-keyframes radiomark {
    0% {
        box-shadow:0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset
    }

    50% {
        box-shadow:0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset
    }

    to {
        box-shadow:0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset
    }
}

@keyframes radiomark {
    0% {
        box-shadow:0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset
    }

    50% {
        box-shadow:0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset
    }

    to {
        box-shadow:0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset
    }
}

@-webkit-keyframes rating-pop {
    0% {
        transform:translateY(-.125em)
    }

    40% {
        transform:translateY(-.125em)
    }

    to {
        transform:translateY(0)
    }
}

@keyframes rating-pop {
    0% {
        transform:translateY(-.125em)
    }

    40% {
        transform:translateY(-.125em)
    }

    to {
        transform:translateY(0)
    }
}

:root .prose {
    --tw-prose-body: hsla(var(--bc) /.8);
    --tw-prose-headings: hsl(var(--bc));
    --tw-prose-lead: hsl(var(--bc));
    --tw-prose-links: hsl(var(--bc));
    --tw-prose-bold: hsl(var(--bc));
    --tw-prose-counters: hsl(var(--bc));
    --tw-prose-bullets: hsla(var(--bc) /.5);
    --tw-prose-hr: hsla(var(--bc) /.2);
    --tw-prose-quotes: hsl(var(--bc));
    --tw-prose-quote-borders: hsla(var(--bc) /.2);
    --tw-prose-captions: hsla(var(--bc) /.5);
    --tw-prose-code: hsl(var(--bc));
    --tw-prose-pre-code: hsl(var(--nc));
    --tw-prose-pre-bg: hsl(var(--n));
    --tw-prose-th-borders: hsla(var(--bc) /.5);
    --tw-prose-td-borders: hsla(var(--bc) /.2)
}

.prose :where(code):not(:where([class ~ ="not-prose"] *)) {
    padding: 2px 8px;
    border-radius:var(--rounded-badge)
}

.prose code:after, .prose code:before {
    content:none
}

.prose pre code {
    border-radius: none;
    padding: 0
}

.prose :where(tbody tr, thead):not(:where([class ~ ="not-prose"] *)) {
    border-bottom-color:hsl(var(--bc) / 20%)
}

.rounded-box {
    border-radius:var(--rounded-box, 1rem)
}

.glass, .glass:hover, .glass.btn-active {
    border: none;
    -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
    backdrop-filter: blur(var(--glass-blur, 40px));
    background-color: transparent;
    background-image: linear-gradient(135deg, rgb(255 255 255 / var(--glass-opacity, 30%)) 0%, rgb(0 0 0 / 0%) 100%), linear-gradient(var(--glass-reflex-degree, 100deg), rgb(255 255 255 / var(--glass-reflex-opacity, 10%)) 25%, rgb(0 0 0 / 0%) 25%);
    box-shadow: 0 0 0 1px rgb(255 255 255 / var(--glass-border-opacity, 10%)) inset, 0 0 0 2px #0000000d;
    text-shadow:0 1px rgb(0 0 0 / var(--glass-text-shadow-opacity, 5%))
}

.btn-sm {
    height: 2rem;
    padding-left: .75rem;
    padding-right: .75rem;
    min-height: 2rem;
    font-size:.875rem
}

.btn-md {
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    min-height: 3rem;
    font-size:.875rem
}

.btn-square:where(.btn-xs) {
    height: 1.5rem;
    width: 1.5rem;
    padding:0
}

.btn-square:where(.btn-sm) {
    height: 2rem;
    width: 2rem;
    padding:0
}

.btn-square:where(.btn-md) {
    height: 3rem;
    width: 3rem;
    padding:0
}

.btn-square:where(.btn-lg) {
    height: 4rem;
    width: 4rem;
    padding:0
}

.btn-circle:where(.btn-sm) {
    height: 2rem;
    width: 2rem;
    border-radius: 9999px;
    padding:0
}

.btn-circle:where(.btn-md) {
    height: 3rem;
    width: 3rem;
    border-radius: 9999px;
    padding:0
}

.menu-horizontal {
    display: inline-flex;
    flex-direction:row
}

.menu-horizontal :where(li) {
    flex-direction:row
}

.menu-horizontal > :where(li) > :where(ul) {
    top: 100%;
    left:initial
}

.avatar.online:before {
    content: "";
    position: absolute;
    z-index: 10;
    display: block;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--su) / var(--tw-bg-opacity));
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%;
    box-shadow:0 0 0 2px hsl(var(--b1))
}

.card-compact .card-body {
    padding: 1rem;
    font-size: .875rem;
    line-height:1.25rem
}

.card-compact .card-title {
    margin-bottom:.25rem
}

.card-normal .card-body {
    padding: var(--padding-card, 2rem);
    font-size: 1rem;
    line-height:1.5rem
}

.card-normal .card-title {
    margin-bottom:.75rem
}

.menu-horizontal :where(li.bordered > *) {
    border-left-width: 0px;
    border-bottom-width:4px
}

.menu-compact :where(li > *) {
    padding-top: .5rem;
    padding-bottom: .5rem;
    font-size: 1rem;
    line-height:1.25rem
}

.menu-horizontal > :where(li:first-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: unset;
    border-bottom-right-radius: unset;
    border-bottom-left-radius:inherit
}

.menu-horizontal > :where(li:first-child) > :where( * :not(ul)) {
    border-top-left-radius: inherit;
    border-top-right-radius: unset;
    border-bottom-right-radius: unset;
    border-bottom-left-radius:inherit
}

.menu-horizontal > :where(li:last-child) {
    border-top-left-radius: unset;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius:unset
}

.menu-horizontal > :where(li:last-child) > :where( * :not(ul)) {
    border-top-left-radius: unset;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius:unset
}

.fixed {
    position:fixed
}

.absolute {
    position:absolute
}

.relative {
    position:relative
}

.sticky {
    position: -webkit-sticky;
    position:sticky
}

.top-0 {
    top:0
}

.left-0 {
    left:0
}

.bottom-6 {
    bottom:1.5rem
}

.top-\[50\%\] {
    top:50%
}

.left-\[50\%\] {
    left:50%
}

.-top-5 {
    top:-1.25rem
}

.z-50 {
    z-index:50
}

.mx-auto {
    margin-left: auto;
    margin-right:auto
}

.mt-3 {
    margin-top:.75rem
}

.ml-2 {
    margin-left:.5rem
}

.mb-8 {
    margin-bottom:2rem
}

.mb-6 {
    margin-bottom:1.5rem
}

.flex {
    display:flex
}

.grid {
    display:grid
}

.hidden {
    display:none
}

.aspect-square {
    aspect-ratio:1 / 1
}

.h-full {
    height:100%
}

.h-6 {
    height:1.5rem
}

.h-5 {
    height:1.25rem
}

.h-\[80\%\] {
    height:80%
}

.h-8 {
    height:2rem
}

.h-\[60\%\] {
    height:60%
}

.h-\[40\%\] {
    height:40%
}

.h-\[20\%\] {
    height:20%
}

.h-\[60rem\] {
    height:60rem
}

.h-16 {
    height:4rem
}

.min-h-\[32rem\] {
    min-height:32rem
}

.w-full {
    width:100%
}

.w-5 {
    width:1.25rem
}

.w-52 {
    width:13rem
}

.w-6 {
    width:1.5rem
}

.w-\[80\%\] {
    width:80%
}

.w-\[60\%\] {
    width:60%
}

.w-\[40\%\] {
    width:40%
}

.w-\[20\%\] {
    width:20%
}

.w-16 {
    width:4rem
}

.max-w-7xl {
    max-width:80rem
}

.max-w-5xl {
    max-width:64rem
}

.max-w-lg {
    max-width:32rem
}

.flex-1 {
    flex:1 1 0%
}

.flex-grow-0 {
    flex-grow:0
}

.translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.-translate-x-\[16rem\] {
    --tw-translate-x: -16rem;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.-translate-y-\[16rem\] {
    --tw-translate-y: -16rem;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.translate-x-\[40\%\] {
    --tw-translate-x: 40%;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.translate-y-\[90\%\] {
    --tw-translate-y: 90%;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.rotate-45 {
    --tw-rotate: 45deg;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.rotate-\[225deg\] {
    --tw-rotate: 225deg;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.rotate-90 {
    --tw-rotate: 90deg;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.rotate-\[210deg\] {
    --tw-rotate: 210deg;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.rotate-\[330deg\] {
    --tw-rotate: 330deg;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.rotate-\[120deg\] {
    --tw-rotate: 120deg;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.rotate-\[300deg\] {
    --tw-rotate: 300deg;
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.transform {
    transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.animate-\[spin_24s_linear_infinite\] {
    -webkit-animation: spin 24s linear infinite;
    animation:spin 24s linear infinite
}

.animate-\[spin_18s_linear_infinite\] {
    -webkit-animation: spin 18s linear infinite;
    animation:spin 18s linear infinite
}

@keyframes spin {
    to {
        transform:rotate(360deg)
    }
}

.animate-\[spin_10s_linear_infinite\] {
    -webkit-animation: spin 10s linear infinite;
    animation:spin 10s linear infinite
}

.grid-flow-col {
    grid-auto-flow:column
}

.grid-cols-1 {
    grid-template-columns:repeat(1, minmax(0, 1fr))
}

.grid-cols-2 {
    grid-template-columns:repeat(2, minmax(0, 1fr))
}

.grid-cols-3 {
    grid-template-columns:repeat(3, minmax(0, 1fr))
}

.grid-cols-4 {
    grid-template-columns:repeat(4, minmax(0, 1fr))
}

.grid-cols-5 {
    grid-template-columns:repeat(5, minmax(0, 1fr))
}

.grid-cols-6 {
    grid-template-columns:repeat(6, minmax(0, 1fr))
}

.grid-cols-7 {
    grid-template-columns:repeat(7, minmax(0, 1fr))
}

.grid-cols-8 {
    grid-template-columns:repeat(8, minmax(0, 1fr))
}

.grid-cols-9 {
    grid-template-columns:repeat(9, minmax(0, 1fr))
}

.grid-cols-10 {
    grid-template-columns:repeat(10, minmax(0, 1fr))
}

.grid-cols-11 {
    grid-template-columns:repeat(11, minmax(0, 1fr))
}

.grid-cols-12 {
    grid-template-columns:repeat(12, minmax(0, 1fr))
}

.flex-col {
    flex-direction:column
}

.flex-wrap {
    flex-wrap:wrap
}

.items-start {
    align-items:flex-start
}

.items-center {
    align-items:center
}

.justify-start {
    justify-content:flex-start
}

.justify-end {
    justify-content:flex-end
}

.gap-12 {
    gap:3rem
}

.gap-4 {
    gap:1rem
}

.gap-8 {
    gap:2rem
}

.gap-1 {
    gap:.25rem
}

.self-stretch {
    align-self:stretch
}

.rounded-lg {
    border-radius:.5rem
}

.rounded-full {
    border-radius:9999px
}

.rounded-sm {
    border-radius:.125rem
}

.rounded-md {
    border-radius:.375rem
}

.border {
    border-width:1px
}

.border-primary {
    --tw-border-opacity: 1;
    border-color:hsl(var(--p) / var(--tw-border-opacity))
}

.border-base-content {
    --tw-border-opacity: 1;
    border-color:hsl(var(--bc) / var(--tw-border-opacity))
}

.bg-primary {
    --tw-bg-opacity: 1;
    background-color:hsl(var(--p) / var(--tw-bg-opacity))
}

.bg-neutral {
    --tw-bg-opacity: 1;
    background-color:hsl(var(--n) / var(--tw-bg-opacity))
}

.bg-transparent {
    background-color:transparent
}

.bg-base-100 {
    --tw-bg-opacity: 1;
    background-color:hsl(var(--b1) / var(--tw-bg-opacity))
}

.bg-gradient-to-l {
    background-image:linear-gradient(to left, var(--tw-gradient-stops))
}

.from-blue-300 {
    --tw-gradient-from: #93c5fd;
    --tw-gradient-to: rgb(147 197 253 / 0);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
}

.to-red-400 {
    --tw-gradient-to: #f87171
}

.bg-clip-text {
    -webkit-background-clip: text;
    background-clip:text
}

.fill-base-content {
    fill:hsl(var(--bc))
}

.p-4 {
    padding:1rem
}

.p-2 {
    padding:.5rem
}

.p-0 {
    padding:0
}

.px-4 {
    padding-left: 1rem;
    padding-right:1rem
}

.py-6 {
    padding-top: 1.5rem;
    padding-bottom:1.5rem
}

.py-12 {
    padding-top: 3rem;
    padding-bottom:3rem
}

.py-4 {
    padding-top: 1rem;
    padding-bottom:1rem
}

.px-6 {
    padding-left: 1.5rem;
    padding-right:1.5rem
}

.py-8 {
    padding-top: 2rem;
    padding-bottom:2rem
}

.text-center {
    text-align:center
}

.text-xl {
    font-size: 1.5rem;
    line-height:2.5rem
}

.text-4xl {
    font-size: 2.25rem;
    line-height:2.5rem
}

.text-sm {
    font-size: .875rem;
    line-height:1.25rem
}

.text-xs {
    font-size: 1rem;
    line-height:1rem
}

.text-5xl {
    font-size: 3rem;
    line-height:1
}

.font-bold {
    font-weight:700
}

.uppercase {
    text-transform:uppercase
}

.normal-case {
    text-transform:none
}

.leading-none {
    line-height:1
}

.text-transparent {
    color:transparent
}

.text-neutral-content {
    --tw-text-opacity: 1;
    color:hsl(var(--nc) / var(--tw-text-opacity))
}

.text-base-content {
    --tw-text-opacity: 1;
    color:hsl(var(--bc) / var(--tw-text-opacity))
}

.text-primary {
    --tw-text-opacity: 1;
    color:hsl(var(--p) / var(--tw-text-opacity))
}

.opacity-60 {
    opacity:.6
}

.shadow-lg {
    --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / .1), 0 4px 6px -4px rgb(0 0 0 / .1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
    box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.shadow-md {
    --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
    box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.shadow {
    --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
    box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.shadow-xl {
    --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / .1), 0 8px 10px -6px rgb(0 0 0 / .1);
    --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
    box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.blur {
    --tw-blur: blur(8px);
    filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
}

.filter {
    filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
}

.backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
    backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)
}

.transition {
    transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-duration:.15s
}

.transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-duration: .15s
}

.content-\[\\\] {
    --tw-content: "";
    content:var(--tw-content)
}

@media (min-width: 640px) {
    .sm\:grid-cols-1 {
        grid-template-columns:repeat(1, minmax(0, 1fr))
    }

    .sm\:grid-cols-2 {
        grid-template-columns:repeat(2, minmax(0, 1fr))
    }

    .sm\:grid-cols-3 {
        grid-template-columns:repeat(3, minmax(0, 1fr))
    }

    .sm\:grid-cols-4 {
        grid-template-columns:repeat(4, minmax(0, 1fr))
    }

    .sm\:grid-cols-5 {
        grid-template-columns:repeat(5, minmax(0, 1fr))
    }

    .sm\:grid-cols-6 {
        grid-template-columns:repeat(6, minmax(0, 1fr))
    }

    .sm\:grid-cols-7 {
        grid-template-columns:repeat(7, minmax(0, 1fr))
    }

    .sm\:grid-cols-8 {
        grid-template-columns:repeat(8, minmax(0, 1fr))
    }

    .sm\:grid-cols-9 {
        grid-template-columns:repeat(9, minmax(0, 1fr))
    }

    .sm\:grid-cols-10 {
        grid-template-columns:repeat(10, minmax(0, 1fr))
    }

    .sm\:grid-cols-11 {
        grid-template-columns:repeat(11, minmax(0, 1fr))
    }

    .sm\:grid-cols-12 {
        grid-template-columns:repeat(12, minmax(0, 1fr))
    }
}

@media (min-width: 768px) {
    .md\:hidden {
        display:none
    }

    .md\:grid-cols-1 {
        grid-template-columns:repeat(1, minmax(0, 1fr))
    }

    .md\:grid-cols-2 {
        grid-template-columns:repeat(2, minmax(0, 1fr))
    }

    .md\:grid-cols-3 {
        grid-template-columns:repeat(3, minmax(0, 1fr))
    }

    .md\:grid-cols-4 {
        grid-template-columns:repeat(4, minmax(0, 1fr))
    }

    .md\:grid-cols-5 {
        grid-template-columns:repeat(5, minmax(0, 1fr))
    }

    .md\:grid-cols-6 {
        grid-template-columns:repeat(6, minmax(0, 1fr))
    }

    .md\:grid-cols-7 {
        grid-template-columns:repeat(7, minmax(0, 1fr))
    }

    .md\:grid-cols-8 {
        grid-template-columns:repeat(8, minmax(0, 1fr))
    }

    .md\:grid-cols-9 {
        grid-template-columns:repeat(9, minmax(0, 1fr))
    }

    .md\:grid-cols-10 {
        grid-template-columns:repeat(10, minmax(0, 1fr))
    }

    .md\:grid-cols-11 {
        grid-template-columns:repeat(11, minmax(0, 1fr))
    }

    .md\:grid-cols-12 {
        grid-template-columns:repeat(12, minmax(0, 1fr))
    }

    .md\:flex-row {
        flex-direction:row
    }

    .md\:place-self-center {
        place-self:center
    }

    .md\:justify-self-end {
        justify-self:end
    }
}

@media (min-width: 1024px) {
    .lg\:card-side {
        align-items: stretch;
        flex-direction:row
    }

    .lg\:card-side figure > * {
        max-width:unset
    }

    {
        width: 100%;
        height: 100%;
        -o-object-fit: cover;
        object-fit:cover
    }

    .lg\:flex {
        display:flex
    }

    .lg\:hidden {
        display:none
    }

    .lg\:grid-cols-1 {
        grid-template-columns:repeat(1, minmax(0, 1fr))
    }

    .lg\:grid-cols-2 {
        grid-template-columns:repeat(2, minmax(0, 1fr))
    }

    .lg\:grid-cols-3 {
        grid-template-columns:repeat(3, minmax(0, 1fr))
    }

    .lg\:grid-cols-4 {
        grid-template-columns:repeat(4, minmax(0, 1fr))
    }

    .lg\:grid-cols-5 {
        grid-template-columns:repeat(5, minmax(0, 1fr))
    }

    .lg\:grid-cols-6 {
        grid-template-columns:repeat(6, minmax(0, 1fr))
    }

    .lg\:grid-cols-7 {
        grid-template-columns:repeat(7, minmax(0, 1fr))
    }

    .lg\:grid-cols-8 {
        grid-template-columns:repeat(8, minmax(0, 1fr))
    }

    .lg\:grid-cols-9 {
        grid-template-columns:repeat(9, minmax(0, 1fr))
    }

    .lg\:grid-cols-10 {
        grid-template-columns:repeat(10, minmax(0, 1fr))
    }

    .lg\:grid-cols-11 {
        grid-template-columns:repeat(11, minmax(0, 1fr))
    }

    .lg\:grid-cols-12 {
        grid-template-columns:repeat(12, minmax(0, 1fr))
    }

    .lg\:py-12 {
        padding-top: 3rem;
        padding-bottom:3rem
    }

    .lg\:text-6xl {
        font-size: 3.75rem;
        line-height:1
    }
}

@media (min-width: 360px) {
    .xs\:block {
        display: block
    }
}

